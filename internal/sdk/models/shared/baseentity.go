// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-emailtemplate/internal/sdk/internal/utils"
	"time"
)

type BaseEntity struct {
	// Created date
	CreatedAt time.Time `json:"_created_at"`
	// Entity ID
	ID string `json:"_id"`
	// Manifest ID used to create/update the entity
	Manifest []string `json:"_manifest,omitempty"`
	// Ivy Organization ID the entity belongs to
	Org string `json:"_org"`
	// Entity Purposes
	Purpose []string `json:"_purpose,omitempty"`
	// URL-friendly identifier for the entity schema
	Schema string `json:"_schema"`
	// Entity tags
	Tags []string `json:"_tags,omitempty"`
	// Entity title
	Title string `json:"_title"`
	// Updated date
	UpdatedAt time.Time `json:"_updated_at"`
}

func (b BaseEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BaseEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BaseEntity) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BaseEntity) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BaseEntity) GetManifest() []string {
	if o == nil {
		return nil
	}
	return o.Manifest
}

func (o *BaseEntity) GetOrg() string {
	if o == nil {
		return ""
	}
	return o.Org
}

func (o *BaseEntity) GetPurpose() []string {
	if o == nil {
		return nil
	}
	return o.Purpose
}

func (o *BaseEntity) GetSchema() string {
	if o == nil {
		return ""
	}
	return o.Schema
}

func (o *BaseEntity) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *BaseEntity) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *BaseEntity) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
