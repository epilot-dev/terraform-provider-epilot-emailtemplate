// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// BulkSendMessageRequestWithQuery - It takes an entity query to derive recipient_ids, treating each as a separate mainEntity to construct individual messages.
// For e.g; if the query is provided as `_schema:opportunity AND status:PENDING`,
//
//	then all the opportunity Ids with status PENDING are treated as separate mainEntity to construct individual messages.
type BulkSendMessageRequestWithQuery struct {
	// ID of email template to use for sending bulk emails
	EmailTemplateID string `json:"email_template_id"`
	// Entity search query to select recipients
	RecipientQuery string `json:"recipient_query"`
	// When true, it lets to send only the email by skip creating the thread & message entities.
	SkipCreatingEntities *bool `json:"skip_creating_entities,omitempty"`
}

func (o *BulkSendMessageRequestWithQuery) GetEmailTemplateID() string {
	if o == nil {
		return ""
	}
	return o.EmailTemplateID
}

func (o *BulkSendMessageRequestWithQuery) GetRecipientQuery() string {
	if o == nil {
		return ""
	}
	return o.RecipientQuery
}

func (o *BulkSendMessageRequestWithQuery) GetSkipCreatingEntities() *bool {
	if o == nil {
		return nil
	}
	return o.SkipCreatingEntities
}
