// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-emailtemplate/internal/sdk/internal/utils"
	"time"
)

type EmailTemplateEntity struct {
	// Created date
	CreatedAt time.Time `json:"_created_at"`
	// Entity ID
	ID string `json:"_id"`
	// Manifest ID used to create/update the entity
	Manifest []string `json:"_manifest,omitempty"`
	// Ivy Organization ID the entity belongs to
	Org string `json:"_org"`
	// Entity Purposes
	Purpose []string `json:"_purpose,omitempty"`
	// URL-friendly identifier for the entity schema
	Schema string `json:"_schema"`
	// Entity tags
	Tags []string `json:"_tags,omitempty"`
	// Entity title
	Title string `json:"_title"`
	// Updated date
	UpdatedAt time.Time `json:"_updated_at"`
	// Email template attachments
	Attachments []any `json:"attachments,omitempty"`
	// Bcc
	Bcc []any `json:"bcc,omitempty"`
	// Body
	Body *string `json:"body,omitempty"`
	// Brand ID. Equal 0 if available for All brands
	BrandID *float64 `json:"brand_id,omitempty"`
	// Cc
	Cc []any `json:"cc,omitempty"`
	// Created by
	CreatedBy *string `json:"created_by,omitempty"`
	File      any     `json:"file,omitempty"`
	// name
	Name string `json:"name"`
	// Subject
	Subject *string `json:"subject,omitempty"`
	// If template is created by system (Double Opt-in, CMD invitation,...) then true, and some attributes can not be edited such as Name, To,...
	// Remember to add default content of template to system_template enum for revert to original feature
	//
	SystemTemplate *bool `json:"system_template,omitempty"`
	// To
	To []any `json:"to,omitempty"`
	// Updated by
	UpdatedBy *string `json:"updated_by,omitempty"`
}

func (e EmailTemplateEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EmailTemplateEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EmailTemplateEntity) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *EmailTemplateEntity) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *EmailTemplateEntity) GetManifest() []string {
	if o == nil {
		return nil
	}
	return o.Manifest
}

func (o *EmailTemplateEntity) GetOrg() string {
	if o == nil {
		return ""
	}
	return o.Org
}

func (o *EmailTemplateEntity) GetPurpose() []string {
	if o == nil {
		return nil
	}
	return o.Purpose
}

func (o *EmailTemplateEntity) GetSchema() string {
	if o == nil {
		return ""
	}
	return o.Schema
}

func (o *EmailTemplateEntity) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *EmailTemplateEntity) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *EmailTemplateEntity) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *EmailTemplateEntity) GetAttachments() []any {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *EmailTemplateEntity) GetBcc() []any {
	if o == nil {
		return nil
	}
	return o.Bcc
}

func (o *EmailTemplateEntity) GetBody() *string {
	if o == nil {
		return nil
	}
	return o.Body
}

func (o *EmailTemplateEntity) GetBrandID() *float64 {
	if o == nil {
		return nil
	}
	return o.BrandID
}

func (o *EmailTemplateEntity) GetCc() []any {
	if o == nil {
		return nil
	}
	return o.Cc
}

func (o *EmailTemplateEntity) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *EmailTemplateEntity) GetFile() any {
	if o == nil {
		return nil
	}
	return o.File
}

func (o *EmailTemplateEntity) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *EmailTemplateEntity) GetSubject() *string {
	if o == nil {
		return nil
	}
	return o.Subject
}

func (o *EmailTemplateEntity) GetSystemTemplate() *bool {
	if o == nil {
		return nil
	}
	return o.SystemTemplate
}

func (o *EmailTemplateEntity) GetTo() []any {
	if o == nil {
		return nil
	}
	return o.To
}

func (o *EmailTemplateEntity) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}
